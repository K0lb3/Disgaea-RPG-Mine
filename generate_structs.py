import re
import os
import json

# path to the dump.cs generated by Perfare's il2cpp dumper
dump_cs_path = r"D:\Datamine\DRPG global\typetre_test\il2cpp\dump.cs"
# folder where the structs are saved into
struct_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), "structs")

reIMaster = re.compile(r"""\[Serializable\]
public( sealed)? class (\w+?) : .+?
\{
(.+?)
\}""", flags=re.M | re.S)
reSerializeField = re.compile(r"""\t\[SerializeField\].+?
\t\[TooltipAttribute\].+?
\t(private|public|protected) (.+?) (.+?);.+?0x([\wABCDDEF]+)
""")


def fetch_structs(fp):
    return {
        master[2]: [
            {
                "type": field[2],
                "name": field[3],
                "offset": int(field[4], 16)
            }
            for field in reSerializeField.finditer(master[3])
        ]
        for master in reIMaster.finditer(open(fp, "rt", encoding="utf8").read())
    }


def read(stream, t, size):
    return struct.unpack(t, stream.read(size))


structs = fetch_structs(dump_cs_path)
os.makedirs(struct_path, exist_ok=True)
for name, struct in structs.items():
    if struct:
        with open(os.path.join(struct_path, f"{name}.json"), "wt", encoding="utf8") as f:
            json.dump(struct, f, ensure_ascii=False, indent=4)
