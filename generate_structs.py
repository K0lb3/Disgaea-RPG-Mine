import re
import os
import json

# path to the dump.cs generated by Perfare's il2cpp dumper
dump_cs_path = "S:\\Datamines\\DRPG global\\Disgaea-RPG---Mine\\dump.cs"
# folder where the structs are saved into
struct_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), "structs")

reIMaster = re.compile(r"""\[Serializable\]
public( sealed)? class (\w+?) .+?
\{
(.+?)
\}""", flags=re.M | re.S)
reSerializeField = re.compile(r"""	private ([^ ]+?) ([a-z_0-9]+?); // (.+)""")
reSerializeProperty = re.compile(r"""	public (virtual )?([^ ]+?) ([a-z_A-Z0-9]+?) \{ get; (set; )?\}()""")

def fetch_structs(fp):
    return {
        master[2]: {
            "fields" : {
                field[2] : field[1]
                #"offset": int(field[3], 16)
                for field in reSerializeField.finditer(master[3])
            },
            "properties" : {
                field[3] : field[2]
                #"offset": int(field[3], 16)
                for field in reSerializeProperty.finditer(master[3])
            }
            
        }
        for master in reIMaster.finditer(open(fp, "rt", encoding="utf8").read())
    }


def read(stream, t, size):
    return struct.unpack(t, stream.read(size))


structs = fetch_structs(dump_cs_path)
os.makedirs(struct_path, exist_ok=True)
for name, struct in structs.items():
    if struct:
        with open(os.path.join(struct_path, f"{name}.json"), "wt", encoding="utf8") as f:
            json.dump(struct, f, ensure_ascii=False, indent=4)
